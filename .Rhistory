source('~/Desktop/github_rep/Projekt-Pdu/Matma_Kod.R', echo=TRUE)
View(Posts)
View(ranking)
#chcemy to teraz porownac z mapa topowych uniwersytetow, dane zaczerpniete z
#rankingu Center for World University Rankings
uniwersytety <- select(ranking, world_rank, country) %>% filter(world_rank<=150)%>%
group_by(country) %>% count(country)
View(uniwersytety)
#widzimy ze te Indie to jest taka mniej aktywna nacja, jednak ma duzo uzytkownikow
#sprobujemy przedstawic dane na mapie
wynik <- znajdowanie_lokalizacji_pelna(aktywnosc = aktywnosc)
View(wynik)
View(Users)
View(uniwersytety)
View(wynik)
View(wynik)
#chcemy to teraz porownac z mapa topowych uniwersytetow, dane zaczerpniete z
#rankingu Center for World University Rankings
uniwersytety <- select(ranking, world_rank, country) %>% filter(world_rank<=150)%>%
group_by(country) %>% NumberOfUsers=count(country)
#chcemy to teraz porownac z mapa topowych uniwersytetow, dane zaczerpniete z
#rankingu Center for World University Rankings
uniwersytety <- select(ranking, world_rank, country) %>% filter(world_rank<=150)%>%
group_by(country) %>% 'NumberOfUsers'=count(country)
#chcemy to teraz porownac z mapa topowych uniwersytetow, dane zaczerpniete z
#rankingu Center for World University Rankings
uniwersytety <- select(ranking, world_rank, country) %>% filter(world_rank<=150)%>%
group_by(country) %>% count(country)
colnames(uniwersytety) <- c('Country','NumberOfUsers')
rysowanie_mapy(wynik = uniwersytety )
uniwersytety <- zamiana_danych_uniwerki(ranking=ranking)
source('~/Desktop/github_rep/Projekt-Pdu/Matma_Kod.R', echo=TRUE)
addTiles()
Var myMarker = L.marker([35.10418, -106.62987]).addTo(map);
L.marker([35.10418, -106.62987]).addTo(map);
map =L.marker([35.10418, -106.62987]).addTo(map);
map = L.marker([35.10418, -106.62987]).addTo(map);
[35.10418, -106.62987].addTo(map);
#badamy lokalizacje najaktywniejszych
b <- rysowanie_mapy(wynik = head(wynik,1000) )
a<-rysowanie_mapy(wynik = uniwersytety )
a
b
compare(a,b)
all_equal(a,b,AllowAll=T)
View(a)
cytowania<- Cytowania(links=PostLinks,Posts=Posts)
View(cytowania)
#zobaczmy jeszcze mape dla cytowan
rysowanie_mapy(wynik = cytowania)
mapy <- world.cities %>%
filter(capital == 1) %>%
dplyr::select(Country = country.etc, lat, lng = long)
mapy <- inner_join(mapy,wynik,by='Country')
mapy <- arrange(mapy,desc(NumberOfUsers))
mapy <- head(mapy, 20)
m <- leaflet(mapy)%>%
addTiles()%>%
addMarkers(label = ~NumberOfUsers)
View(mapy)
View(ranking)
uniwersytety <- select(ranking, world_rank, country) %>% filter(world_rank<=150)%>%
group_by(country) %>% count(country)
View(uniwersytety)
uniwersytety <- zamiana_danych_uniwerki(ranking=ranking)
View(uniwersytety)
uniwersytety <- arrange ( uniwersytety,desc(n))
head(uniwersytety,20)
uniwersytety <- head(uniwersytety,20)
compare(uniwersytety,mapy,allowAll = T)
#widzimy ze te Indie to jest taka mniej aktywna nacja, jednak ma duzo uzytkownikow
#sprobujemy przedstawic dane na mapie
wynik <- znajdowanie_lokalizacji_pelna(aktywnosc = aktywnosc)
compare(uniwersytety,wynik,allowAll = T)
View(wynik)
head(wynik,10)
all_equal(uniwersytety,wynik,allowAll = T)
wynik <- head(wynik,10)
uniwersytety <- head(uniwersytety,10)
all_equal(uniwersytety,wynik,allowAll = T)
View(uniwersytety)
View(wynik)
b%>%
addTiles()%>%
addMarkers(label = ~NumberOfUsers)
b%>%
addTiles()%>%
addMarkers(label = ~NumberOfUsers)
#widzimy ze te
#widzimy ze te
b%>%
addTiles()%>%
addMarkers(label = ~NumberOfUsers)
a<-rysowanie_mapy(wynik = uniwersytety )
uniwersytety <- zamiana_danych_uniwerki(ranking=ranking)
colnames(uniwersytety) <- c('Country','NumberOfUsers')
a<-rysowanie_mapy(wynik = uniwersytety )
a
b%>%
addTiles()%>%
addMarkers(label = ~NumberOfUsers,color='Gold')
a %>% addtile(b) %>% addMarkers(label = ~NumberOfUsers)
a %>% addTiles(b) %>% addMarkers(label = ~NumberOfUsers)
mapy <- world.cities %>%
filter(capital == 1) %>%
dplyr::select(Country = country.etc, lat, lng = long)
mapy <- inner_join(mapy,wynik,by='Country')
mapy <- arrange(mapy,desc(NumberOfUsers))
mapy <- head(mapy, 20)
m <- leaflet(mapy)%>%
addTiles()%>%
addMarkers(label = ~NumberOfUsers)
#chcemy to teraz porownac z mapa topowych uniwersytetow, dane zaczerpniete z
#rankingu Center for World University Rankings
zamiana_danych_uniwerki <- function(ranking=ranking)
{uniwersytety <- select(ranking, world_rank, country) %>% filter(world_rank<=150)%>%
group_by(country) %>% count(country)}
uniwersytety <- zamiana_danych_uniwerki(ranking=ranking)
m <- leaflet(mapy)%>%
addTiles()%>%
addAwesomeMarkers(label = ~NumberOfUsers) }
mapy <- world.cities %>%
filter(capital == 1) %>%
dplyr::select(Country = country.etc, lat, lng = long)
mapy <- inner_join(mapy,wynik,by='Country')
mapy <- arrange(mapy,desc(NumberOfUsers))
mapy <- head(mapy, 20)
m <- leaflet(mapy)%>%
addTiles()%>%
addAwesomeMarkers(label = ~NumberOfUsers)
m <- leaflet(mapy)%>%
addTiles()%>%
addAwesomeMarkers(label = ~NumberOfUsers) }
m <- leaflet(mapy)%>%
addTiles()%>%
addMarkers(label = ~NumberOfUsers) }
wykres_komentarze_czas(Votes)
#widzimy ze te mapy sie ze soba pokrywaja. Najlepsze uniwersytety w stanach i w Europie, punkty takie
#jak izrael tez dzialaja.
#porownajmy teraz odchodzenie uzytkownikow
wykres_komentarze_czas <-function (Votes=Votes)
{
wynik <- Votes
wynik <- select(wynik, CreationDate )
wynik$CreationDate <- gsub('.{16}$', '', wynik$CreationDate)
wynik <- wynik %>% group_by(CreationDate) %>% count(CreationDate)
wynik <- wynik$n
wynik <- ts(wynik, start=c(2015, 1, 1), end=c(2021, 1,1), frequency=12)
ts_plot(wynik,Xtitle="Lata",Ytitle='Ilosc komentarzy', title='Komentarze od Czasu')
}
wykres_komentarze_czas(Votes)
View(uniwersytety)
wykres_ubywania <- function(Users=Users)
{
uzytkownicy <- Users
uzytkownicy$LastAccessDate <- gsub('.{16}$', '', uzytkownicy$LastAccessDate)
uzytkownicy <- uzytkownicy %>% group_by(LastAccessDate) %>% count(LastAccessDate)
colnames(uzytkownicy) <- c('LastAccessDate','LastSeenAccounts')
dochodzenie <- Users
dochodzenie$CreationDate <- gsub('.{16}$', '', dochodzenie$CreationDate)
dochodzenie <- dochodzenie %>% group_by(CreationDate) %>% count(CreationDate)
colnames(dochodzenie) <- c('LastAccessDate','NewAccounts')
wynik <- inner_join(dochodzenie,uzytkownicy,by='LastAccessDate')
wynik['HowMuchLeft'] <- wynik['NewAccounts'] - wynik['LastSeenAccounts']
wynik <- wynik$HowMuchLeft
wynik<- ts(wynik, start=c(2015, 1, 1), end=c(2021, 1,1), frequency=12)
ts_plot(wynik,Xtitle="Lata",Ytitle='Ilosc kont ktore ubyly', title='Ubywanie czlonkow')
}
wykres_ubywania(Users)
wykres_ubywania <- function(Users=Users)
{
uzytkownicy <- Users
uzytkownicy$LastAccessDate <- gsub('.{16}$', '', uzytkownicy$LastAccessDate)
uzytkownicy <- uzytkownicy %>% group_by(LastAccessDate) %>% count(LastAccessDate)
colnames(uzytkownicy) <- c('LastAccessDate','LastSeenAccounts')
dochodzenie <- Users
dochodzenie$CreationDate <- gsub('.{16}$', '', dochodzenie$CreationDate)
dochodzenie <- dochodzenie %>% group_by(CreationDate) %>% count(CreationDate)
colnames(dochodzenie) <- c('LastAccessDate','NewAccounts')
wynik <- inner_join(dochodzenie,uzytkownicy,by='LastAccessDate')
wynik['HowMuchLeft'] <- wynik['NewAccounts'] - wynik['LastSeenAccounts']
wynik <- wynik$HowMuchLeft
wynik<- ts(wynik, start=c(2015, 1, 1), end=c(2021, 1,1), frequency=12)
ts_plot(wynik,Xtitle="Lata",Ytitle='Ilosc kont ktore przybyly', title='Ubywanie czlonkow')
}
#zobaczmy jeszcze jak wygladaja cytowania
cytowania<- Cytowania(links=PostLinks,Posts=Posts)
y
#znajdzmy najlepszych kawowych guru, i dowiedzmy sie czegos o nich
Kawiarze_cytowania <- function(Users=Users,cytowania=cytowania)
{
uzytkownicy <- Users
uzytkownicy <- select(uzytkownicy,Id,Reputation,DisplayName,Location,CreationDate)
colnames(uzytkownicy)[1] <- 'OwnerUserId'
wynik <- inner_join(cytowania,uzytkownicy,'OwnerUserId')
wynik <- select(wynik,cytowania,Score,LinksToScoreRatio,OwnerUserId,DisplayName,Location,CreationDate)
#chcemy wiedziec ile kawiarzy zdobylo jaka sume pkt i ile mieli cytowan.
wynik <- wynik  %>% group_by(OwnerUserId,DisplayName,Location,CreationDate) %>% summarise(OgolneCytowania=sum(cytowania),Wyniki=sum(Score))
a <- arrange(wynik,desc(OgolneCytowania)) #Dostalismy najbardziej cytowanych 20
head(a,20)
}
Kawiarze_cytowania(Users=Users,cytowania=cytowania)
a <- Kawiarze_cytowania(Users=Users,cytowania=cytowania)
last_activity <- function(a=a){
a <- Kawiarze_Score(Users=Users,cytowania=cytowania)
uzytkownicy <- Users
colnames(uzytkownicy)[1] <- "OwnerUserId"
wynik <- inner_join(a,uzytkownicy,"OwnerUserId")
wynik <- select(wynik,DisplayName.x,LastAccessDate)
wynik$LastAccessDate <- gsub('.{19}$', '', wynik$LastAccessDate)
wynik
}
last_activity(a)
last_activity(a=a)
last_activity <- function(a=a){
uzytkownicy <- Users
colnames(uzytkownicy)[1] <- "OwnerUserId"
wynik <- inner_join(a,uzytkownicy,"OwnerUserId")
wynik <- select(wynik,DisplayName.x,LastAccessDate)
wynik$LastAccessDate <- gsub('.{19}$', '', wynik$LastAccessDate)
wynik
}
last_activity(a=a)
a <- a %>% group_by(LastAccessDate) %>% count(LastAccessDate)
a$LastAccessDate <- as.numeric(a$LastAccessDate)
barplot(a$n,names.arg = a$LastAccessDate, xlab = "Lata", ylab = 'Ilosc osob', main = 'Wykres odchodzących ludzi ( top 20 cytowanych) od czasu')
a <- last_activity(a=a)
a <- a %>% group_by(LastAccessDate) %>% count(LastAccessDate)
a$LastAccessDate <- as.numeric(a$LastAccessDate)
barplot(a$n,names.arg = a$LastAccessDate, xlab = "Lata", ylab = 'Ilosc osob', main = 'Wykres odchodzących ludzi ( top 20 cytowanych) od czasu')
View(Tags)
View(cytowania)
View(Badges)
View(uniwersytety)
View(Users)
View(Posts)
View(ranking)
source('~/Desktop/github_rep/Projekt-Pdu/Matma_Kod.R', echo=TRUE)
